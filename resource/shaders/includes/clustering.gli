// cluster system

import "uniforms.gli"

#ifndef CLUSTERING_H
#define CLUSTERING_H

uniform usamplerBuffer clusterBuffer;

uint get_cluster_z_index(float screen_depth)
{
	return uint(max(log(screen_depth) * clusterScaleBias.x + clusterScaleBias.y, 0.0));
}

uint compute_cluster_index(vec2 pixel_pos, float screen_depth)
{
	uint z_index = get_cluster_z_index(screen_depth);
    uvec3 indices = uvec3(uvec2(pixel_pos.xy / clusterTileSizes.xy), z_index);
    uint cluster = (indices.z * CLUSTER_GRID_SIZE_X) * CLUSTER_GRID_SIZE_Y + (indices.y * CLUSTER_GRID_SIZE_X + indices.x);
    return cluster;
}

#endif