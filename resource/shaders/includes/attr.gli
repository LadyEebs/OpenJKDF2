// common vertex attribute layout
//
// wanted to use things like GL_AMD_shader_explicit_vertex_parameter but they're fucking unstable as all fuck
// crashing during shader compilation galore, and GL_EXT_fragment_shader_barycentric doesn't even work properly (always returns vertex 0)
// maybe I'd have better luck on nvidia but whatever

import "defines.gli"

#ifndef ATTR_H
#define ATTR_H

#ifdef VERTEX_SHADER

	// input assembler attributes
	in vec3 coord3d;	// vertex position
	in vec4 v_normal;	// vertex normal
	in vec4 v_color[2];	// up to 2 vertex colors
	in vec4 v_uv[4];	// up to 4 texcoords

	#define VAPI out

#else

	#define VAPI in

#endif

VAPI vec3 f_uv[UV_SETS];
VAPI vec4 f_coord;

VAPI vec3 f_normal;
VAPI vec4 f_color[COLOR_SETS];

VAPI float f_lodbias;
		
#ifndef VERTEX_SHADER

	vec3 fetch_vtx_pos() { return f_coord.xyz; }
	vec3 fetch_vtx_dir() { return normalize(-f_coord.xyz); }
	vec2 fetch_vtx_uv(uint i) { return f_uv[i].xy / f_uv[i].z; }
	vec3 fetch_vtx_normal() { return f_normal; }
	float fetch_vtx_depth() { return f_coord.w; }
	vec4 fetch_vtx_coord() { return f_coord; }
	vec4 fetch_vtx_color(uint i) { return f_color[i]; }	
	float fetch_vtx_lodbias() { return f_lodbias; }

#endif


#endif // ATTR_H
